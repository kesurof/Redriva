# .github/workflows/docker-publish.yml

name: Build and Push Docker Image

# Ce workflow se déclenche à chaque push sur la branche "main"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Variables d'environnement
env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/redriva

jobs:
  build-and-push:
    # Utilise la dernière version d'Ubuntu comme environnement d'exécution
    runs-on: ubuntu-latest

    steps:
      # 1. Récupère le code de votre dépôt
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Vérification des secrets (pour debug)
      - name: Check secrets
        run: |
          if [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
            echo "❌ DOCKERHUB_USERNAME secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
            echo "❌ DOCKERHUB_TOKEN secret is not set"
            exit 1
          fi
          echo "✅ Docker Hub secrets are configured"

      # 3. Se connecte à Docker Hub en utilisant les secrets configurés
      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4. Met en place Docker Buildx pour des builds optimisés
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 5. Extraire les métadonnées pour les tags
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      # 6. Construit l'image et la pousse sur Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          # Ne pousse que si ce n'est pas une pull request
          push: ${{ github.event_name != 'pull_request' }}
          # Tags extraits des métadonnées
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Cache pour accélérer les builds
          cache-from: type=gha
          cache-to: type=gha,mode=max